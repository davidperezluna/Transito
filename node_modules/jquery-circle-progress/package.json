{
  "_args": [
    [
      {
        "raw": "jquery-circle-progress@1.2.2",
        "scope": null,
        "escapedName": "jquery-circle-progress",
        "name": "jquery-circle-progress",
        "rawSpec": "1.2.2",
        "spec": "1.2.2",
        "type": "version"
      },
      "C:\\Users\\maxartkiller\\angular-project\\AdminuxAngular"
    ]
  ],
  "_from": "jquery-circle-progress@1.2.2",
  "_id": "jquery-circle-progress@1.2.2",
  "_inCache": true,
  "_location": "/jquery-circle-progress",
  "_nodeVersion": "4.7.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/jquery-circle-progress-1.2.2.tgz_1492992299256_0.9200275237672031"
  },
  "_npmUser": {
    "name": "kottenator",
    "email": "kottenator@gmail.com"
  },
  "_npmVersion": "2.15.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jquery-circle-progress@1.2.2",
    "scope": null,
    "escapedName": "jquery-circle-progress",
    "name": "jquery-circle-progress",
    "rawSpec": "1.2.2",
    "spec": "1.2.2",
    "type": "version"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/jquery-circle-progress/-/jquery-circle-progress-1.2.2.tgz",
  "_shasum": "260e9130ac8e2b5572eaa7a93b9e8a6b27bc8eea",
  "_shrinkwrap": null,
  "_spec": "jquery-circle-progress@1.2.2",
  "_where": "C:\\Users\\maxartkiller\\angular-project\\AdminuxAngular",
  "author": {
    "name": "Rostyslav Bryzgunov",
    "email": "kottenator@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/kottenator/jquery-circle-progress/issues"
  },
  "dependencies": {
    "jquery": "*"
  },
  "description": "Plugin to draw animated circular progress bars",
  "devDependencies": {
    "jsdoc": "~3.4",
    "karma": "~1.2",
    "karma-firefox-launcher": "~1.0",
    "karma-phantomjs-launcher": "~1.0",
    "karma-qunit": "~1.2",
    "karma-sauce-launcher": "~1.0",
    "qunitjs": "~2.0",
    "uglify-js": "~2.7"
  },
  "directories": {},
  "dist": {
    "shasum": "260e9130ac8e2b5572eaa7a93b9e8a6b27bc8eea",
    "tarball": "https://registry.npmjs.org/jquery-circle-progress/-/jquery-circle-progress-1.2.2.tgz"
  },
  "gitHead": "895a8ac570548339a4add4b1e5354f63ba6c3cb5",
  "homepage": "https://github.com/kottenator/jquery-circle-progress#readme",
  "keywords": [
    "jquery",
    "canvas",
    "progress-bar"
  ],
  "license": "MIT",
  "main": "dist/circle-progress.js",
  "maintainers": [
    {
      "name": "kottenator",
      "email": "kottenator@gmail.com"
    }
  ],
  "name": "jquery-circle-progress",
  "optionalDependencies": {},
  "readme": "jquery-circle-progress\n======================\n\n[![Build status](https://travis-ci.org/kottenator/jquery-circle-progress.svg?branch=master)](https://travis-ci.org/kottenator/jquery-circle-progress)\n[![Bower version](https://img.shields.io/bower/v/jquery-circle-progress.svg?maxAge=2592000)](https://bower.io/search/?q=jquery-circle-progress)\n[![NPM version](https://img.shields.io/npm/v/jquery-circle-progress.svg?maxAge=2592000)](https://www.npmjs.com/package/jquery-circle-progress)\n\njQuery Plugin to draw animated circular progress bars like this:\n\n![](http://i.imgur.com/zV5VUQG.png)\n\nCheck out [more examples](http://kottenator.github.io/jquery-circle-progress/)! Or maybe the crazy [one](http://jsbin.com/vatuza/5/)?\n\nInstall\n-------\n\nMake your choice:\n\n* Download [latest GitHub release](https://github.com/kottenator/jquery-circle-progress/releases)\n* `bower install jquery-circle-progress`\n* `npm install jquery-circle-progress`\n\nUsage\n-----\n\n```html\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js\"></script>\n<script src=\"jquery-circle-progress/dist/circle-progress.js\"></script>\n\n<div id=\"circle\"></div>\n\n<script>\n  $('#circle').circleProgress({\n    value: 0.75,\n    size: 80,\n    fill: {\n      gradient: [\"red\", \"orange\"]\n    }\n  });\n</script>\n```\n\nIf you use AMD or CommonJS with some JS bundler - see the [UMD section](#umd) below.\n\nOptions\n-------\n\nSpecify options like in example above.\n\n| Option | Description |\n| ---- | ---- |\n| **value** | This is the only required option. It should be from `0.0` to `1.0` <br> Default: `0` |\n| size | Size of the circle / canvas in pixels <br> Default: `100` |\n| startAngle | Initial angle (for `0` value) <br> Default: `-Math.PI` |\n| reverse | Reverse animation and arc draw <br> Default: `false` |\n| thickness | Width of the arc. By default it's automatically calculated as 1/14 of `size` but you may set your own number <br> Default: `\"auto\"` |\n| lineCap | Arc line cap: `\"butt\"`, `\"round\"` or `\"square\"` - [read more](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.lineCap) <br> Default: `\"butt\"`\n| fill | The arc fill config. You may specify next:  <br>- `\"#ff1e41\"` <br>- `{ color: \"#ff1e41\" }` <br>- `{ color: 'rgba(255, 255, 255, .3)' }` <br>- `{ gradient: [\"red\", \"green\", \"blue\"] }` <br>- `{ gradient: [[\"red\", .2], [\"green\", .3], [\"blue\", .8]] }` <br>- `{ gradient: [ ... ], gradientAngle: Math.PI / 4 }` <br>- `{ gradient: [ ... ], gradientDirection: [x0, y0, x1, y1] }` <br>- `{ image: \"http://i.imgur.com/pT0i89v.png\" }`<br>- `{ image: imageInstance }`<br>- `{ color: \"lime\", image: \"http://i.imgur.com/pT0i89v.png\" }` <br> Default: `{ gradient: [\"#3aeabb\", \"#fdd250\"] }` |\n| emptyFill | Color of the \"empty\" arc. Only a color fill supported by now <br> Default: `\"rgba(0, 0, 0, .1)\"` |\n| animation | Animation config. See [jQuery animations](http://api.jquery.com/animate/). <br> You may also set it to `false` <br> Default: `{ duration: 1200, easing: \"circleProgressEase\" }`  <br> `\"circleProgressEase\"` *is just a ease-in-out-cubic easing* |\n| animationStartValue | Default animation starts at `0.0` and ends at specified `value`. Let's call this direct animation. If you want to make reversed animation then you should set `animationStartValue` to `1.0`. Also you may specify any other value from `0.0` to `1.0` <br> Default: `0.0`\n| insertMode | Canvas insertion mode: append or prepend it into the parent element? <br> Default: `\"prepend\"` |\n\nFrom version `1.1.3` you can specify any config option as HTML `data-` attribute.\n\nIt will work *only on init*, i.e. after the widget is inited you may update its properties only via `.circleProgress({/*...*/})` method. `data-` attributes will be ignored.\n\nAlso, object options like `\"fill\"` or `\"animation\"` should be valid JSON (and don't forget about HTML-escaping):\n\n```html\n<div\n  class=\"circle\"\n  data-value=\"0.9\"\n  data-size=\"60\"\n  data-thickness=\"20\"\n  data-animation-start-value=\"1.0\"\n  data-fill=\"{\n    &quot;color&quot;: &quot;rgba(0, 0, 0, .3)&quot;,\n    &quot;image&quot;: &quot;http://i.imgur.com/pT0i89v.png&quot;\n  }\"\n  data-reverse=\"true\"\n></div>\n```\n\nEvents\n------\n\n| Event | Description | Handler |\n| ---- | ---- | ---- |\n| `circle-inited` | Triggered on init or re-init. | `function(event)`: <br>- `event` - jQuery event |\n| `circle-animation-start` | Triggered once the animation is started. | `function(event)`: <br>- `event` - jQuery event |\n| `circle-animation-progress` | Triggered on each [animation tick](http://api.jquery.com/animate/#step). | `function(event, animationProgress, stepValue)`: <br>- `event` - jQuery event <br>- `animationProgress` - from `0.0` to `1.0` <br>- `stepValue` - current step value: from `0.0` to `value` |\n| `circle-animation-end` | Triggered once the animation is finished. | `function(event)`: <br>- `event` - jQuery event |\n\nBrowsers support\n----------------\n\nThe library uses `<canvas>` which is supported by all modern browsers *(including mobile browsers)*\nand Internet Explorer 9+ ([Can I Use](http://caniuse.com/#search=canvas)).\n\nI haven't implemented any fallback / polyfill for unsupported browsers yet\n*(i.e. for Internet Explorer 8 and older / misc browsers)*.\n\nUMD\n---\n\nI use [UMD template for jQuery plugin](https://github.com/umdjs/umd/blob/d31bb6ee7098715e019f52bdfe27b3e4bfd2b97e/templates/jqueryPlugin.js) which combines three things:\n\n* works fine with _browser globals_\n* works fine with AMD\n* works fine with CommonJS\n\n### Browser globals\n\n```html\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js\"></script>\n<script src=\"jquery-circle-progress/dist/circle-progress.js\"></script>\n<script>\n  $('#circle').circleProgress({\n    value: 0.75,\n  });\n</script>\n```\n\n### AMD\n\nAssuming that you have `jquery`, `jquery-circle-progress` and `requirejs` in `libs/` directory:\n\n```html\n<script src=\"libs/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      'jquery': 'libs/jquery/dist/jquery', // 'jquery' path is required - 'jquery-circle-progress' requires it\n      'jquery-circle-progress': 'libs/jquery-circle-progress/dist/circle-progress' // and this one is for your convenience\n    }\n  });\n  requirejs(['jquery', 'jquery-circle-progress'], function($) {\n    $('#circle').circleProgress({\n      value: 0.75\n    });\n  });\n</script>\n```\n\nYou can [configure RequireJS](http://requirejs.org/docs/api.html) as you wish, just make `'jquery'` dependency reachable.\n\n### CommonJS\n\n```js\n// script.js\nrequire('jquery-circle-progress');\nvar $ = require('jquery');\n$('#circle').circleProgress({\n  value: 0.75\n});\n```\n\n```sh\nsome-js-bundler < script.js > script.bundle.js\n```\n\n```html\n<script src=\"script.bundle.js\"></script>\n```\n\nYou can use any JS bundler ([Webpack](https://webpack.github.io/), [Browserify](http://browserify.org/), etc) - no specific configuration required.\n\nAPI\n---\n\n### Get/set value\n\nGet it:\n\n```js\n$('.circle').circleProgress({ value: 0.5 });\nvar value = $('.circle').circleProgress('value'); // 0.5\n```\n\nIt will return the *first* item's value (by *first* I mean when `$('.circle').length >= 1`).\n*It works only if the widget is already inited. Raises an error otherwise*.\n\nSet it:\n\n```js\n$('.circle').circleProgress('value', 0.75); // set value to 0.75 & animate the change\n```\n\nIt will update *all* selected items value and animate the change.\nIt doesn't *redraw* the widget - it updates the value & animates the changes.\nFor example, it may be an AJAX loading indicator, which shows the loading progress.\n\n### Get `<canvas>`\n\n```js\n$('.circle').circleProgress({ value: 0.5 });\nvar canvas = $('.circle').circleProgress('widget');\n```\n\nIt will return the *first* item's `<canvas>` (by *first* I mean when `$('.circle').length >= 1`).\n*It works only if the widget is already inited. Raises an error otherwise*.\n\n### Get `CircleProgress` instance\n\n```js\nvar instance = $('#circle').data('circle-progress');\n```\n\n### Redraw existing circle\n\n```js\n$('#circle').circleProgress({ value: 0.5, fill: { color: 'orange' }});\n$('#circle').circleProgress('redraw'); // use current configuration and redraw\n$('#circle').circleProgress(); // alias for 'redraw'\n$('#circle').circleProgress({ size: 150 }); // set new size and redraw\n```\n\n*It works only if the widget is already inited. Raises an error otherwise*.\n\n### Change default options\n\n```js\n$.circleProgress.defaults.size = 50;\n```\n\nFAQ\n---\n\n<dl>\n<dt>How to start the animation only when the circle appears in browser's view (on scrolling)?\n<dd>Here is <a href=\"https://github.com/kottenator/jquery-circle-progress/issues/8\">my proposed solution</a>.\n<dt>How to make the size flexible?\n<dd>E.g. for responsive design, you can do it <a href=\"https://github.com/kottenator/jquery-circle-progress/issues/17\">in the following way</a>.\n<dt>What if I need it to run in IE8?\n<dd>There is no full-feature support for IE8 (actually, I didn't imlpement IE8 support at all). But you may follow <a href=\"https://github.com/kottenator/jquery-circle-progress/issues/35\">my recommendations</a>.\n<dt>How to stop the animation?\n<dd>Here is <a href=\"https://github.com/kottenator/jquery-circle-progress/issues/37\">what you can do</a>.\n<dt>Can I handle \"click\" event?\n<dd>It's not in the \"core\" but you can use <a href=\"http://output.jsbin.com/fetequ/5\">my example of mouse/touch events handling</a>.\n<dt>May I customize the shape somehow?\n<dd>It's a bit \"tricky\" but possible. Here is <a href=\"https://github.com/kottenator/jquery-circle-progress/wiki/Custom-layouts\">my little collection</a>.\n</dl>\n\nDevelopment\n-----------\n\n### Install\n\n```sh\ngit clone git@github.com:kottenator/jquery-circle-progress.git\nnpm install\n```\n\n### Modify\n\nYou need to update `dist/circle-progress.min.js` after any change to `dist/circle-progress.js`:\n \n```sh\nnpm run build-min\n```\n\nIf you're using one of JetBrains IDEs - you can configure a File Watcher.\nIt's also possible to use some CLI tool like [Watchman](https://facebook.github.io/watchman/).\n\n### Test\n\n```sh\nnpm test\n```\n\nSauceLabs:\n\n```sh\nexport SAUCE_USERNAME=...\nexport SAUCE_ACCESS_KEY=...\nexport BUILD_NUMBER=...\nnpm test -- karma-saucelabs.conf.js\n```\n\n### Build docs\n\nThe API docs are not complete yet but you can build them:\n\n```sh\nnpm run build-docs\n```\n\nThey will be generated in `docs/api/`.\n\n### Release new version\n\n* finalize the code\n* update the version in `package.json`, `bower.json` and `dist/circle-progress.js` docstring\n* update min dist: `npm run build-min`\n* update `docs/index.html` - link to the latest dist version _(which doesn't exist yet)_\n* push the changes to `master` branch\n* release on Bower: just create a Git tag (e.g.): `git tag v1.2.3 && git push --tags`\n* release on GitHub - add release notes to the Git tag\n* release on NPM: `npm publish`, but be aware:\n  \n  > Once a package is published with a given name and version, that specific name and version combination can never be used again - [NPM docs](https://docs.npmjs.com/cli/publish)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/kottenator/jquery-circle-progress.git"
  },
  "scripts": {
    "build-docs": "jsdoc dist/circle-progress.js -c jsdoc.conf",
    "build-min": "uglifyjs dist/circle-progress.js -cmo dist/circle-progress.min.js --comments",
    "test": "karma start"
  },
  "version": "1.2.2"
}
