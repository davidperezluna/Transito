{
  "_args": [
    [
      {
        "raw": "tc-angular-chartjs@2.1.4",
        "scope": null,
        "escapedName": "tc-angular-chartjs",
        "name": "tc-angular-chartjs",
        "rawSpec": "2.1.4",
        "spec": "2.1.4",
        "type": "version"
      },
      "C:\\Users\\maxartkiller\\angular-project\\AdminuxAngular"
    ]
  ],
  "_from": "tc-angular-chartjs@2.1.4",
  "_id": "tc-angular-chartjs@2.1.4",
  "_inCache": true,
  "_location": "/tc-angular-chartjs",
  "_nodeVersion": "7.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/tc-angular-chartjs-2.1.4.tgz_1497358160386_0.8537637528497726"
  },
  "_npmUser": {
    "name": "carlcraig",
    "email": "carlcraig.threeceestudios@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "tc-angular-chartjs@2.1.4",
    "scope": null,
    "escapedName": "tc-angular-chartjs",
    "name": "tc-angular-chartjs",
    "rawSpec": "2.1.4",
    "spec": "2.1.4",
    "type": "version"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/tc-angular-chartjs/-/tc-angular-chartjs-2.1.4.tgz",
  "_shasum": "e710e033394b8b277d54fbc4ebca37abc79c435b",
  "_shrinkwrap": null,
  "_spec": "tc-angular-chartjs@2.1.4",
  "_where": "C:\\Users\\maxartkiller\\angular-project\\AdminuxAngular",
  "author": {
    "name": "Carl Craig",
    "email": "carlcraig.threeceestudios@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/carlcraig/tc-angular-chartjs/issues"
  },
  "dependencies": {
    "chart.js": "^2.1.3"
  },
  "description": "AngularJS directives for Chart.js",
  "devDependencies": {
    "angular": "~1.5.8",
    "del": "^2.2.2",
    "gulp": "^3.9.1",
    "gulp-banner": "^0.1.3",
    "gulp-ng-annotate": "^2.0.0",
    "gulp-rename": "^1.2.2",
    "gulp-uglify": "^2.0.0",
    "gulp-umd": "^0.2.0",
    "jasmine-core": "^2.5.0",
    "karma": "^1.2.0",
    "karma-jasmine": "^1.0.2",
    "karma-phantomjs-launcher": "^1.0.2",
    "phantomjs-prebuilt": "^2.1.12",
    "pump": "^1.0.1",
    "run-sequence": "^1.2.2"
  },
  "directories": {},
  "dist": {
    "shasum": "e710e033394b8b277d54fbc4ebca37abc79c435b",
    "tarball": "https://registry.npmjs.org/tc-angular-chartjs/-/tc-angular-chartjs-2.1.4.tgz"
  },
  "files": [
    "dist/",
    "package.json",
    "README.md",
    "LICENSE-MIT",
    "LICENSE-APACHE-2.0"
  ],
  "gitHead": "c8ddd075c82ce26624a05faca4e648a9eb6710e8",
  "homepage": "http://carlcraig.github.io/tc-angular-chartjs/",
  "license": "(MIT OR Apache-2.0)",
  "main": "dist/tc-angular-chartjs.min.js",
  "maintainers": [
    {
      "name": "carlcraig",
      "email": "carlcraig.threeceestudios@gmail.com"
    }
  ],
  "name": "tc-angular-chartjs",
  "optionalDependencies": {},
  "readme": "# tc-angular-chartjs\r\n\r\n> AngularJS directives for [Chart.js](http://www.chartjs.org/)\r\n\r\n[![Build Status](https://travis-ci.org/carlcraig/tc-angular-chartjs.svg)](https://travis-ci.org/carlcraig/tc-angular-chartjs)\r\n\r\n## Installation\r\n\r\nEnsure you have [installed Chart.js](http://www.chartjs.org/docs/#getting-started-installation)\r\n\r\n#### npm\r\n\r\n```bash\r\nnpm install tc-angular-chartjs --save\r\n```\r\n\r\n#### bower\r\n\r\nBower support has been dropped but you can still use tc-angular-chartjs with Bower using [bower-npm-resolver](https://www.npmjs.com/package/bower-npm-resolver).\r\n\r\n#### download\r\n\r\nYou can download the source archive from the github [releases](https://github.com/carlcraig/tc-angular-chartjs/releases) page.\r\n\r\nJust include `dist/tc-angular-chartjs.js` into your project.\r\n\r\n## Basic Usage\r\n\r\nAdd `tc.chartjs` to your modules dependencies e.g.\r\n\r\n```javascript\r\nangular.module( 'app', ['tc.chartjs']);\r\n```\r\n\r\nYou will then have access to the following directives:\r\n- tc-chartjs\r\n- tc-chartjs-line\r\n- tc-chartjs-bar\r\n- tc-chartjs-horizontalbar\r\n- tc-chartjs-radar\r\n- tc-chartjs-polararea\r\n- tc-chartjs-pie\r\n- tc-chartjs-doughnut\r\n- tc-chartjs-bubble\r\n\r\nJust place one of these directives on a `canvas` element to create a Chart.js chart.\r\n\r\nYou will also want to give the chart some `data`, `options` and `plugins`. These can be provided via the `chart-options`, `chart-data` and `chart-plugins` attributes.\r\n\r\nFor data structures, options and inline plugins please refer to [Chart.js documentation](http://www.chartjs.org/docs/)\r\n\r\nYou can also handle chart clicks via the `chart-click` attribute.\r\n\r\nExample Pie Chart\r\n\r\n```html\r\n<canvas\r\n  tc-chartjs-pie\r\n  chart-data=\"myData\"\r\n  chart-options=\"myOptions\"\r\n  chart-plugins=\"myPlugins\"\r\n  chart-click=\"onChartClick(event)\"\r\n></canvas>\r\n```\r\n```javascript\r\n$scope.myData = {\r\n  // Chart.js data structure goes here\r\n  // e.g. Pie Chart Data Structure http://www.chartjs.org/docs/#doughnut-pie-chart-data-structure\r\n  labels: [\r\n    \"Red\",\r\n    \"Blue\",\r\n    \"Yellow\"\r\n  ],\r\n  datasets: [\r\n    {\r\n      data: [300, 50, 100],\r\n      backgroundColor: [\r\n        \"#FF6384\",\r\n        \"#36A2EB\",\r\n        \"#FFCE56\"\r\n      ],\r\n      hoverBackgroundColor: [\r\n        \"#FF6384\",\r\n        \"#36A2EB\",\r\n        \"#FFCE56\"\r\n      ]\r\n    }\r\n  ]\r\n};\r\n\r\n$scope.myOptions =  {\r\n  // Chart.js options go here\r\n  // e.g. Pie Chart Options http://www.chartjs.org/docs/#doughnut-pie-chart-chart-options\r\n};\r\n\r\n$scope.myPlugins = [{\r\n  // Chart.js inline plugins go here\r\n  // e.g. http://www.chartjs.org/docs/latest/developers/plugins.html#using-plugins\r\n}];\r\n\r\n$scope.onChartClick = function (event) {\r\n  console.log(event);\r\n};\r\n\r\n```\r\n\r\nFor more examples please view the `demo` folder.\r\n\r\n## Using the `tc-chartjs` directive\r\n\r\nWhen using the `tc-chartjs` directive you will need to add an additional attribute to\r\nsay which type of chart should be created.\r\n\r\nJust attach a `chart-type=\"\"` attribute to the canvas element.\r\n\r\n```html\r\n<canvas\r\n  tc-chartjs\r\n  chart-type=\"doughnut\"\r\n  chart-data=\"myData\"\r\n  chart-options=\"myOptions\"\r\n></canvas>\r\n```\r\n\r\nAvailable Types:\r\n\r\n- line\r\n- bar\r\n- horizontalbar\r\n- radar\r\n- polararea\r\n- pie\r\n- doughnut\r\n- bubble\r\n\r\nPassing another value to chart-type than the above will try to create a chart of\r\nthat type, which is useful if you have extended Chart.js with custom chart types,\r\ne.g. through plugins.\r\n\r\n## Developing\r\n\r\nThis library is built using `gulp` so ensure you have it installed.\r\n\r\nTo build the `dist` files run the following:\r\n\r\n```bash\r\nnpm run build\r\n```\r\n\r\nTo run the tests:\r\n\r\n```bash\r\nnpm test\r\n```\r\n\r\nTo watch files and rebuild `dist` when changes are made:\r\n\r\n```bash\r\nnpm start\r\n```\r\n\r\n## Contributing\r\n\r\n- [Open a Pull Request (PR)](https://github.com/carlcraig/tc-angular-chartjs/pull/new/master)\r\n- Make sure your PR is on a new branch you created from the latest version of master branch\r\n- Please do not open a PR from your master branch\r\n- Open a PR even if your code is incomplete to start a discussion and to collect feedback\r\n- Please make sure all unit tests pass, and add new tests for any added features.\r\n\r\n\r\n## License\r\n\r\ntc-angular-chartjs is dual licensed with the Apache-2.0 or MIT license.\r\n\r\nSee LICENSE-APACHE-2.0 and LICENSE-MIT for more details.\r\n\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/carlcraig/tc-angular-chartjs.git"
  },
  "scripts": {
    "build": "gulp build",
    "start": "gulp watch",
    "test": "gulp test",
    "test:install": "cd test/angular-1-2 && npm install && cd ../angular-1-5 && npm install"
  },
  "version": "2.1.4"
}
