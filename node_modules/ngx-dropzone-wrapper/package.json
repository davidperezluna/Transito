{
  "_args": [
    [
      {
        "raw": "ngx-dropzone-wrapper@4.6.6",
        "scope": null,
        "escapedName": "ngx-dropzone-wrapper",
        "name": "ngx-dropzone-wrapper",
        "rawSpec": "4.6.6",
        "spec": "4.6.6",
        "type": "version"
      },
      "C:\\Users\\maxartkiller\\angular-project\\AdminuxAngular"
    ]
  ],
  "_from": "ngx-dropzone-wrapper@4.6.6",
  "_id": "ngx-dropzone-wrapper@4.6.6",
  "_inCache": true,
  "_location": "/ngx-dropzone-wrapper",
  "_nodeVersion": "8.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ngx-dropzone-wrapper-4.6.6.tgz_1507564332668_0.6894910873379558"
  },
  "_npmUser": {
    "name": "zefoy",
    "email": "devel@zef.fi"
  },
  "_npmVersion": "5.4.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ngx-dropzone-wrapper@4.6.6",
    "scope": null,
    "escapedName": "ngx-dropzone-wrapper",
    "name": "ngx-dropzone-wrapper",
    "rawSpec": "4.6.6",
    "spec": "4.6.6",
    "type": "version"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ngx-dropzone-wrapper/-/ngx-dropzone-wrapper-4.6.6.tgz",
  "_shasum": "780380d7361377ea9171cc8d36139f15d8ce3fa0",
  "_shrinkwrap": null,
  "_spec": "ngx-dropzone-wrapper@4.6.6",
  "_where": "C:\\Users\\maxartkiller\\angular-project\\AdminuxAngular",
  "bugs": {
    "url": "https://github.com/zefoy/ngx-dropzone-wrapper/issues"
  },
  "dependencies": {
    "dropzone": "^5.1.0"
  },
  "description": "Angular wrapper library for Dropzone",
  "devDependencies": {
    "@angular/common": "^4.0.0",
    "@angular/compiler": "^4.0.0",
    "@angular/compiler-cli": "^4.0.0",
    "@angular/core": "^4.0.0",
    "@angular/platform-browser": "^4.0.0",
    "@types/dropzone": "^5.0.0",
    "@types/node": "~6.0.0",
    "angular2-inline-template-style": "~1.0.0",
    "angular2-template-loader": "~0.6.0",
    "awesome-typescript-loader": "~3.2.0",
    "codelyzer": "~3.1.0",
    "core-js": "~2.4.0",
    "cpx": "~1.5.0",
    "node-sass": "~4.5.0",
    "raw-loader": "~0.5.0",
    "rxjs": "~5.4.0",
    "sass-loader": "~6.0.0",
    "string-replace-loader": "~1.1.0",
    "strip-sourcemap-loader": "~0.0.0",
    "stylelint": "~8.0.0",
    "stylelint-config-standard": "~17.0.0",
    "stylelint-order": "~0.6.0",
    "tslint": "~5.6.0",
    "typescript": "~2.4.0",
    "watch": "~1.0.0",
    "webpack": "~2.6.0",
    "zone.js": "~0.8.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-It+rD/x7MfGoESERpl3wFSGCbdyC23xau4M2NYv6421kjiXA6n/I1+jgu0oaEEWDSEeRcXyxok6FM6oW74R7lw==",
    "shasum": "780380d7361377ea9171cc8d36139f15d8ce3fa0",
    "tarball": "https://registry.npmjs.org/ngx-dropzone-wrapper/-/ngx-dropzone-wrapper-4.6.6.tgz"
  },
  "gitHead": "2999164638d5315cccaf71ff29e06e85c525ebbd",
  "homepage": "https://github.com/zefoy/ngx-dropzone-wrapper#readme",
  "license": "MIT",
  "main": "bundles/ngx-dropzone-wrapper.umd.js",
  "maintainers": [
    {
      "name": "zefoy",
      "email": "devel@zef.fi"
    }
  ],
  "module": "./dist/index.js",
  "name": "ngx-dropzone-wrapper",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/common": ">=2.0.0",
    "@angular/core": ">=2.0.0"
  },
  "readme": "# Angular Dropzone Wrapper\n\n<a href=\"https://badge.fury.io/js/ngx-dropzone-wrapper\"><img src=\"https://badge.fury.io/js/ngx-dropzone-wrapper.svg\" align=\"right\" alt=\"npm version\" height=\"18\"></a>\n\nThis is an Angular wrapper library for the [Dropzone](http://www.dropzonejs.com/).\n\nSee a live example application <a href=\"https://zefoy.github.io/ngx-dropzone-wrapper/\">here</a>.\n\n### Building the library\n\n```bash\nnpm install\nnpm run build\n```\n\n### Running the example\n\n```bash\ncd example\nnpm install\nnpm start\n```\n\n### Installing and usage\n\n```bash\nnpm install ngx-dropzone-wrapper --save\n```\n\n##### Load the module for your app (with global configuration):\n\n```javascript\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\nimport { DropzoneConfigInterface } from 'ngx-dropzone-wrapper';\n\nconst DROPZONE_CONFIG: DropzoneConfigInterface = {\n  // Change this to your upload POST address:\n Â url: 'https://httpbin.org/post',\n  maxFilesize: 50,\n  acceptedFiles: 'image/*'\n};\n\n@NgModule({\n  ...\n  imports: [\n    ...\n    DropzoneModule.forRoot(DROPZONE_CONFIG)\n  ]\n})\n```\n\n##### Use it in your html template (with custom configuration):\n\nThis library provides two ways to create a Dropzone element, simple component and custom directive.\n\n**COMPONENT USAGE**\n\nSimply replace the element that would ordinarily be passed to `Dropzone` with the dropzone component.\n\n**NOTE:** Component provides couple additional features from directive. Such as the placeholder image, if you don't need them or are heavily customizing the dropzone then you might want to use the directive instead.\n\n```html\n<dropzone [config]=\"config\" [message]=\"'Click or drag images here to upload'\" (error)=\"onUploadError($event)\" (success)=\"onUploadSuccess($event)\"></dropzone>\n```\n\n```javascript\n[config]            // Custom config to override the global defaults.\n[disabled]          // Disables / detaches dropzone from the element.\n\n[message]           // Message to show for the user on the upload area.\n[placeholder]       // Placeholder image to be shown as the upload area.\n\n[useDropzoneClass]  // Use dropzone class (needed by the default styles).\n\n[runInsideAngular]  // Run dropzone function calls inside the angular zone.\n\n(error)             // Event handler for the dropzone upload error event.\n(success)           // Event handler for the dropzone upload success event.\n(canceled)          // Event handler for the dropzone upload canceled event.\n\n(<dropzone-event>)  // All other dropzone events are also supported as bindings.\n```\n\n**DIRECTIVE USAGE**\n\nWhen using only the directive you need to provide your own theming or import the default theme:\n\n```css\n@import 'https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.1.1/min/dropzone.min.css';\n```\n\nDropzone directive can be used in form or div element with optional custom configuration:\n\n```html\n<div [dropzone]=\"config\" (error)=\"onUploadError($event)\" (success)=\"onUploadSuccess($event)\"></div>\n```\n\n```javascript\n[dropzone]          // Can be used to provide optional custom config.\n[disabled]          // Disables / detaches dropzone from the element.\n\n[useDropzoneClass]  // Use dropzone class (needed by the default styles).\n\n[runInsideAngular]  // Run dropzone function calls inside the angular zone.\n\n(error)             // Event handler for the dropzone upload error event.\n(success)           // Event handler for the dropzone upload success event.\n(canceled)          // Event handler for the dropzone upload canceled event.\n\n(<dropzone-event>)  // All other dropzone events are also supported as bindings.\n```\n\n##### Available configuration options (custom / global configuration):\n\nThis library supports all Dropzone configuration options and few custom extra options for easier usage.\n\n**LIBRARY OPTIONS**\n\n```javascript\nautoReset         // Time for resetting component after upload (Default: null).\nerrorReset        // Time for resetting component after an error (Default: null).\ncancelReset       // Time for resetting component after canceling (Default: null).\n```\n\n**DROPZONE OPTIONS**\n\n```javascript\nurl               // Upload url where to send the upload request (Default: '').\nmethod            // HTTP method to use communicating with the server (Default: 'post').\nheaders           // Object of additional headers to send to the server (Default: null).\nparamName         // Name of the file parameter that gets transferred (Default: 'file').\nmaxFilesize       // Maximum file size for the upload files in megabytes (Default: null).\nacceptedFiles     // Comma separated list of mime types or file extensions (Default: null).\n```\n\nFor more detailed documentation with all the supported dropzone events / options see [Dropzone documentation](http://www.dropzonejs.com/#configuration-options).\n\n##### Available control / helper functions (provided by the directive):\n\n```javascript\nreset()            // Resets the dropzone upload area (removes all finished preview files).\n```\n\nAbove functions can be accessed through the directive reference (available as directiveRef in the component).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/zefoy/ngx-dropzone-wrapper.git"
  },
  "scripts": {
    "build": "npm run build:umd && npm run build:aot",
    "build:aot": "npm run build:js && npm run build:css && npm run build:html",
    "build:css": "node-sass src/ -o dist/ --source-map=true",
    "build:html": "cpx src/lib/*.html dist/lib/",
    "build:js": "ngc -p src/tsconfig.json",
    "build:umd": "webpack --config config/webpack.config.js",
    "clean": "rm -rf dist bundles node_modules",
    "deploy": "npm run build && npm run inline && npm publish",
    "init": "npm install",
    "inline": "ng2-inline --compress -b dist/lib/ -o ./ 'dist/lib/*.js'",
    "lint": "npm run lint:js && npm run lint:scss",
    "lint:scss": "stylelint 'src/**/*.scss' --syntax scss",
    "lint:ts": "tslint 'src/**/*.ts'",
    "start": "npm run build",
    "watch": "watch 'npm run build' src/"
  },
  "stylelint": {
    "extends": "./stylelint.json"
  },
  "tslint": {
    "extends": "./tslint.json"
  },
  "typings": "./dist/index.d.ts",
  "version": "4.6.6"
}
